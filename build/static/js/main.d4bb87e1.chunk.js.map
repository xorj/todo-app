{"version":3,"sources":["components/ToDoItem.js","components/ToDoList.js","components/AddToDo.js","App.js","index.js"],"names":["Wrapper","styled","div","Button","button","Text","p","CheckBox","input","ToDoItem","props","className","type","onChange","completedToggle","bind","id","style","textDecoration","completed","text","onClick","deleteItem","ToDoList","toDoList","toDos","length","map","todo","key","AddToDo","useState","setText","width","display","justifyContent","alignItems","flexDirection","onReset","event","fontFamily","color","fontSize","margin","padding","borderRadius","backgroundColor","border","borderBottom","transition","flexGrow","marginLeft","placeholder","target","value","cursor","add","App","state","todos","setState","filter","addItem","alert","undefined","push","this","Component","WebFont","load","google","families","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4bb87e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\nfont-weight: 300;\r\nbackground-color: lightgray;\r\nmargin: 5px 0;\r\nborder-radius: 5px;\r\nwidth: 100%;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center; \r\nbox-shadow: 0 4px 6px rgba(0, 0, 0, 0.15), 0 8px 10px rgba(0, 0, 0, 0.14);\r\n\r\n`;\r\nconst Button = styled.button`\r\nborder: none;\r\npadding: 9px;\r\nborder-radius: 5px;\r\ncursor: pointer;\r\nfont-size: 10px;\r\n&: hover {\r\n    background-color: #CD919A;\r\n}\r\n\r\n`;\r\n\r\nconst Text = styled.p`\r\ndisplay: inline-block;\r\nflex-grow: 1;\r\nmargin: 0 5px;\r\nfont-size: 1rem;\r\n\r\n\r\n`;\r\n\r\nconst CheckBox = styled.input`\r\n    width: 24px;\r\n    height: 24px;\r\n    margin-left: 5px;\r\n`;\r\n\r\n const ToDoItem = ( props ) => {\r\n\r\n    const completedToggle = (event) => {\r\n\r\n        return {textDecoration: (props.completed) ? 'line-through' :'none'}\r\n     };\r\n\r\n\r\n    return (\r\n        <Wrapper className = 'toDoItem'>\r\n            <CheckBox type='checkbox' onChange = {props.completedToggle.bind(this, props.id)} />\r\n            <Text style= {completedToggle()}> {props.text}</Text>\r\n            <Button onClick = {props.deleteItem.bind(this, props.id)}><span className=\"material-icons\">delete_outline</span></Button>\r\n        </ Wrapper>\r\n    );\r\n};\r\n\r\nexport default ToDoItem;","import React from 'react';\r\nimport ToDoItem from './ToDoItem';\r\nimport styled from 'styled-components';\r\n\r\nconst ToDoList = styled.div`\r\nheight: 400px;\r\npadding: 5px;\r\nwidth: 100%;\r\nmargin: 10px 0;\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-direction: column;\r\nbackground-color: white;\r\noverflow: auto;\r\nflex-grow: 1;\r\n\r\n`;\r\nconst toDoList = ( props ) => {\r\nif(props.toDos.length === 0){\r\nreturn (<div className=\"toDoList\"><p>There are no todos.</p></div>);\r\n}else{\r\n\r\n}\r\nreturn (\r\n    <ToDoList className=\"toDoList\">\r\n{props.toDos.map((todo) => \r\n    <ToDoItem \r\n    id = {todo.id}\r\n    key = {todo.id} \r\n    text = {todo.text} \r\n    completed = {todo.completed} \r\n    completedToggle = {props.completedToggle}\r\n    deleteItem = {props.deleteItem}\r\n    />)}\r\n    </ToDoList>);\r\n}\r\n      \r\n\r\nexport default toDoList;","import React, { useState } from 'react';\r\n\r\nconst AddToDo = ( props ) => {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const changeText = (event) => {\r\n         setText(event.target.value);\r\n    }\r\n\r\n   const resetInput = ( event ) => {\r\n       setText(\"\");\r\n      \r\n   }\r\n\r\nconst styleInput = {\r\n    fontFamily: 'Roboto, sans-serif',\r\n    color: '#333',\r\n    fontSize: '1.2rem',\r\n    margin: '0 auto',\r\n    padding: '1rem 5px',\r\n    borderRadius: '0.2rem',\r\n    backgroundColor: 'rgb(255, 255, 255)',\r\n    border: 'none',\r\n    display: 'inline-block',\r\n    borderBottom: '0.3rem solid transparent',\r\n    transition: 'all 0.3s',\r\n    flexGrow: 1,\r\n    marginLeft: '5px'\r\n}\r\n\r\nconst styleButton = {\r\n    backgroundColor: '#66bb6a',\r\n    padding: '15px 15px',\r\n    borderRadius: '30px',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    margin: '5px'\r\n    \r\n\r\n};\r\n\r\nconst styleForm = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'row'\r\n}\r\n\r\n\r\n    return(\r\n\r\n\r\n    <div style={{width: '100%'}}>\r\n        <form style= {styleForm} onReset={resetInput}>\r\n        <input style={styleInput} type=\"text\" placeholder= \"Add a new task...\" onChange={changeText}></input>\r\n        <button style={styleButton}type=\"reset\" onClick={props.add.bind(this, text)}><span className=\"material-icons\">\r\nadd\r\n</span></button>\r\n    </form>\r\n    </div>\r\n    );\r\n};\r\nexport default AddToDo;","import React, { Component } from 'react';\nimport './App.css';\nimport ToDoList from './components/ToDoList';\nimport AddToDo from './components/AddToDo';\nimport styled from 'styled-components'\n\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #B0B3BE;\n  border: 1px solid gray;\n  padding: 20px 5px;\n  margin: 0 auto;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (max-width: 768px){\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (min-width: 769px){\n    width: 50%;\n    height: 75%;\n  }\n    \n`;\n\nclass App extends Component{\n state = {\n  todos: [\n    {\n      id: 1,\n      text: \"Drinking 2l of water\",\n      completed: false\n    },\n    {\n      id: 2,\n      text: \"Cleaning up my bedroom\",\n      completed: false\n    },\n    {\n      id: 3,\n      text: \"Studying english\",\n      completed: false\n    }\n  ]\n }\n\n//Togggle Completed\n\ncompletedToggle = ( id ) => {\n  this.setState({todos: this.state.todos.map((todo) => {\nif(todo.id === id){\n      todo.completed = !todo.completed;\n    }\n    return todo;\n}\n)} );}\n    \n//Delete Item\n\ndeleteItem = ( id ) => {\n  this.setState(\n    {todos: this.state.todos.filter((todo) => todo.id !== id)}\n  );\n\n}\n\n//Add Item\n\naddItem = (text) => {\n  const todos = this.state.todos;\n  const sameToDo = (todos.filter((todo) => todo.text === text)).length !== 0;\n  if(sameToDo){\n    alert(\"This task already exists.\");\n    }else{\n      if(text === undefined || text === \"\"){\n      alert(\"Please enter task text.\")\n        }else {\n          if(text.length > 25){\n            alert(\"The task is too long.\")\n          }else{\n      todos.push({\n        id: todos.length + 1,\n        text: text,\n        completed: false\n      });\n\n      this.setState({todos: todos});\n    }\n   \n  }\n};\n\n}\n\n render(){\n  return (\n  <Wrapper>\n  <h1 className=\"header\">To Do</h1>\n  <ToDoList \n  toDos={this.state.todos} \n  completedToggle={this.completedToggle} \n  deleteItem={this.deleteItem} />\n  <AddToDo add={this.addItem} />\n  </Wrapper>\n  );\n   \n }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n      families: ['Roboto:300,400,700', 'sans-serif']\n    }\n  });\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}